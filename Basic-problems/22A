In this problem the best choice would be using the sets to solve it as we wanted it to be sorted when we add the elements into it.
and also we want to access the element later on. so basically the code is below to implement it.

#include<iostream>
#include<set>
using namespace std;
main()
{
    int n,t,i;
    set<int>s;
    cin>>n;
    for(i=0;i<n;i++){
    cin>>t;
    s.insert(t);}
    if(s.size()<2)
        cout<<"NO";
    else
    cout<<*(++s.begin());
}


or 

#include<bits/stdc++.h>
using namespace std;
int main()
{
	int n;
	cin>>n;
	set<int>s;
	for(int i=0;i<n;i++)
	{
		int a;
		cin>>a;
		s.insert(a);
	}
	auto it=s.begin();
	it++;
	if(it!=s.end())
		cout<<*it;
	else
		cout<<"NO";
}
